{
	"info": {
		"_postman_id": "1337c249-3349-45b8-917b-b5f87b763e3f",
		"name": "ProgrammrAPITest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ListUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.not.eql(undefined);\r",
							"    pm.expect(jsonData[1]).to.not.eql(undefined);\r",
							"\r",
							"    const user1Obj = jsonData[0];\r",
							"    pm.expect(user1Obj._id).to.eql('614b9bbcb97fb423ac92eb8f');\r",
							"    pm.expect(user1Obj.googleId).to.eql('1');\r",
							"    pm.expect(user1Obj.createdAt).to.eql('2021-09-22T21:10:20.503Z');\r",
							"    pm.expect(user1Obj.updatedAt).to.eql('2021-09-22T21:10:20.503Z');\r",
							"    pm.expect(user1Obj.__v).to.eql(0);\r",
							"\r",
							"    const user2Obj = jsonData[1];\r",
							"    pm.expect(user2Obj._id).to.eql('614b9ef50c3a463234066f60');\r",
							"    pm.expect(user2Obj.googleId).to.eql('2');\r",
							"    pm.expect(user2Obj.createdAt).to.eql('2021-09-22T21:24:05.027Z');\r",
							"    pm.expect(user2Obj.updatedAt).to.eql('2021-09-22T21:24:05.027Z');\r",
							"    pm.expect(user2Obj.__v).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateExistingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUserWithInvalidBody",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"invalid\": \"field\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.googleId).to.eql('1');\r",
							"    pm.expect(jsonData.createdAt).to.eql('2021-09-22T21:10:20.503Z');\r",
							"    pm.expect(jsonData.updatedAt).to.eql('2021-09-22T21:10:20.503Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/users/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetMissingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/users/999",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"999"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/users/3",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteMissingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/users/999",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"999"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProfileForExistingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"User\",\r\n    \"dob\": \"2000/01/01\",\r\n    \"location\": {\r\n        \"long\": 0,\r\n        \"lat\": 0\r\n    },\r\n    \"bio\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/1/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProfileForMissingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"User\",\r\n    \"dob\": \"2000/01/02\",\r\n    \"location\": {\r\n        \"long\": 0,\r\n        \"lat\": 0\r\n    },\r\n    \"bio\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/999/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"999",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProfileWithInvalidBody",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"invalid\": \"field\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/999/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"999",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProfileForExistingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.firstName).to.eql('Test');\r",
							"    pm.expect(jsonData.lastName).to.eql('User');\r",
							"    pm.expect(jsonData.bio).to.eql('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.');\r",
							"\r",
							"    const location = jsonData.location;\r",
							"    pm.expect(location).to.not.eql(undefined);\r",
							"    pm.expect(location.long).to.eql(0);\r",
							"    pm.expect(location.lat).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/users/1/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProfileForMissingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/users/999/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"999",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProfileForExistingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"User\",\r\n    \"lastName\": \"Test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/1/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProfileForMissingUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"User\",\r\n    \"lastName\": \"Test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/999/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"999",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProfileWithInvalidBody",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"invalid\": \"field\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/1/profile",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000"
		}
	]
}